💬⬇️
Very 
very 
long
comment
💬⬆️

<function> partition(🐍[🔢] array, 🔢 low, 🔢 high) → 🔢 {
    💬 choose the rightmost element as pivot
    🔢 pivot = array[high]

    💬 pointer for greater element
    🔢 i = low - 1

    💬 traverse through all elements
    💬 compare each element with pivot
    🔁 (🔢 j = range(low, high)) {
        🍃 (array[j] 🐜⚖️ pivot) {

            💬 If element smaller than pivot is found
            💬 swap it with the greater element pointed by i
            i += 1

            💬 Swapping element at i with element at j
            (array[i], array[j]) = (array[j], array[i])
        }
    }

    💬 Swap the pivot element with the greater element specified by i
    (array[i + 1], array[high]) = (array[high], array[i + 1])

    💬 Return the position from where partition is done
    🦞 i + 1
}

🗺️[🔢, 🔠] m ◀️ 🗺️(1: "one", 2: "two", 3: "three")

🏛️ Drink {
    ⏺️ volume;
    🆒 isAlcohol;

    Drink(⏺️ volume, 🆒 isAlcohol) {
        <this>.volume = volume
        <this>.isAlcohol = isAlcohol
    }

    <function> drink(⏺️ volume = None) → <void> {
        🍃 (volume == None) {
            volume = <this>.volume
        }

        🍃 (<this>.volume 🐘⚖️ volume) {
            <this>.volume -= volume
        }
    }
}

🏛️ Beer <inherits> Drink {
    Beer(⏺️ volume) {
        <super>(volume, ✅)
    }
}